---
interface Props {
  id?: string;
  href?: string;
  target?: '_blank' | '_parent' | '_self' | '_top';
  variant?: 'primary' | 'secondary' | 'danger' | 'outline';
  size?: 'sm' | 'md' | 'lg';
}

const {
  target = '_self',
  href = '/',
  variant = 'primary',
  size = 'md',
  id = 'astro-button',
} = Astro.props as Props;

const baseClasses =
  'rounded-md font-medium transition-all duration-200 ease-in-out';
const sizeClasses: Record<string, string> = {
  sm: 'px-3 py-1 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg',
};
const variantClasses: Record<string, string> = {
  primary: 'bg-primary text-secondary-content',
  secondary: 'bg-secondary text-black',
  danger: 'bg-red-500 text-white',
  outline: 'border border-gray-500 text-gray-500',
};

const buttonClasses = `${baseClasses} ${sizeClasses[size] || sizeClasses.md} ${variantClasses[variant] || variantClasses.primary}`;
---

<div class="bg-black w-full rounded-md border-r-2 border-b-2 border-black">
  <a
    href={href}
    id={id}
    target={target}
    class={buttonClasses +
      ' btn border-2 border-black border-r-4 flex gap-4 justify-center border-b-4 hover:cursor-pointer disabled:cursor-not-allowed w-full transition-transform duration-200 ease-in-out hover:-translate-x-1 hover:-translate-y-1'}
  >
    <slot />
  </a>
</div>
